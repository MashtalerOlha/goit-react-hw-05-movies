{"version":3,"file":"static/js/288.da73a2ad.chunk.js","mappings":"sPAGe,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,UAAKH,EAAMI,IAAMC,MAAO,CAAEC,KAAML,GAAxC,WACE,gBACAM,MAAO,IAAKC,OAAQ,IAClBC,IACET,EAAMU,YAAN,yCACsCV,EAAMU,aACxC,yHAENC,IAAKX,EAAMY,kBAEb,SAAC,KAAD,UAAcZ,EAAMa,a,gCChBfC,EAAaC,EAAAA,EAAAA,KAAH,2IAQVC,EAAeD,EAAAA,EAAAA,OAAH,oKAUZE,EAAQF,EAAAA,EAAAA,MAAH,oWAmBLG,EAAWH,EAAAA,EAAAA,GAAH,8IASRI,EAAWJ,EAAAA,EAAAA,EAAH,6FCpCN,SAASK,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAsCJ,EAAAA,EAAAA,YAAtC,eAAOK,EAAP,KAAoBC,EAApB,KAEMC,EAAQT,EAAaU,IAAI,UAM/BC,EAAAA,EAAAA,YAAU,WACHF,KAILG,EAAAA,EAAAA,IAAkBH,GAAOI,MAAK,YAAiC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cACxCP,EAAeO,GACfT,EAAUQ,MAEZE,OACC,CAACP,IAEJ,IAKMO,EAAQ,WACZ,OAAOZ,EAAa,KAGtB,OACE,+BACE,4BACE,UAACZ,EAAD,CAAYyB,SAZG,SAAAC,GACnBA,EAAEC,iBACFlB,EAAgB,CAAEQ,MAAON,KAUrB,WACE,SAACR,EAAD,CACEyB,SA9BgB,SAAAF,GACxBd,EAAac,EAAEG,cAAcC,QA8BrBA,MAAOnB,EACPoB,KAAK,OACLC,aAAa,MACbC,YAAY,eACZC,UAAU,SAEZ,SAAChC,EAAD,CAAc6B,KAAK,SAAnB,wBAGF,SAAC3B,EAAD,UACGS,EAAOsB,KAAI,SAAAjD,GACV,OAAO,SAACD,EAAD,CAAWC,MAAOA,GAAYA,EAAMI,SAG9B,IAAhByB,GACC,SAACV,EAAD,oCAEA,wB,8LCjEGD,EAAWH,EAAAA,EAAAA,GAAH,qHAORmC,GAAOnC,EAAAA,EAAAA,GAAOoC,EAAAA,GAAPpC,CAAH,kDAIJqC,EAAQrC,EAAAA,EAAAA,GAAH,6HAOLsC,EAAOtC,EAAAA,EAAAA,GAAH,qGAOJuC,EAAavC,EAAAA,EAAAA,EAAH","sources":["views/MovieList/MovieList.js","components/SearchForm/SearchForm.Styled.js","components/SearchForm/SearchMovies.js","views/HomeView/HomeView.Styled.js"],"sourcesContent":["import { useLocation } from 'react-router-dom';\nimport { Movie, Film , MovieTitle} from 'views/HomeView/HomeView.Styled';\n\nexport default function MovieList({ movie }) {\n  const location = useLocation();\n\n  return (\n    <Movie>\n      <Film to={`${movie.id}`} state={{ from: location }}>\n        <img\n        width={300} height={400}\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n              : 'https://png.pngtree.com/png-vector/20190820/ourmid/pngtree-no-image-vector-illustration-isolated-png-image_1694547.jpg'\n          }\n          alt={movie.original_title}\n        />\n        <MovieTitle >{movie.title}</MovieTitle>\n      </Film>\n    </Movie>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 35px;\n  margin-bottom: 35px;\n`;\n\nexport const SearchButton = styled.button`\n  margin: 4px;\n  background: none;\n  border: none;\n  font-size: 15px;\n  cursor: pointer;\n  font-family: 'Koulen';\n  font-size: 21px;\n`;\n\nexport const Input = styled.input`\n  border: none;\n  margin-right: 17px;\n  border-bottom: 1px solid black;\n  height: 23px;\n  outline: none;\n  padding: 4px;\n  width: 320px;\n  font-family: 'Koulen';\n  font-size: 21px;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border-bottom: 1px solid #727272;\n    box-shadow: rgb(142 142 142 / 91%) 4px 7px 9px -3px;\n  }\n`;\n\nexport const FilmList = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n  margin-bottom: 6px;\n\n`;\n\nexport const NotFound = styled.p`\n  font-family: 'Koulen';\n  font-size: 35px;\n  text-align: center;\n`","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from '../../services/api';\nimport MovieList from '../../views/MovieList/MovieList';\nimport {\n  NotFound,\n  SearchButton,\n  SearchForm,\n  Input,\n  FilmList,\n} from './SearchForm.Styled';\n\nexport default function MoviesPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [userInput, setUserInput] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [totalResult, setTotalResult] = useState();\n\n  const query = searchParams.get('query');\n\n  const handleInputChange = e => {\n    setUserInput(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchSearchMovies(query).then(({ results, total_results }) => {\n      setTotalResult(total_results);\n      setMovies(results);\n    });\n    reset();\n  }, [query]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: userInput });\n  };\n\n  const reset = () => {\n    return setUserInput('');\n  };\n\n  return (\n    <>\n      <div>\n        <SearchForm onSubmit={onFormSubmit}>\n          <Input\n            onChange={handleInputChange}\n            value={userInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Search movie\"\n            autoFocus=\"off\"\n          />\n          <SearchButton type=\"submit\">Search</SearchButton>\n        </SearchForm>\n\n        <FilmList>\n          {movies.map(movie => {\n            return <MovieList movie={movie} key={movie.id} />;\n          })}\n        </FilmList>\n        {totalResult === 0 ? (\n          <NotFound>Not found, try again</NotFound>\n        ) : (\n          <p></p>\n        )}\n      </div>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const FilmList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nexport const Film = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Movie = styled.li`\n  text-decoration: none;\n  max-width: 300px;\n  margin-bottom: 10px;\n  border: 2px solid #868686;\n`;\n\nexport const Item = styled.li`\n  max-width: 300px;\n  border: 2px solid #868686;\n  margin-bottom: 11px;\n\n`;\n\nexport const MovieTitle = styled.p`\n  color: black;\n  font-size: 21px;\n  text-align: center;\n`;\n"],"names":["MovieList","movie","location","useLocation","to","id","state","from","width","height","src","poster_path","alt","original_title","title","SearchForm","styled","SearchButton","Input","FilmList","NotFound","MoviesPage","useSearchParams","searchParams","setSearchParams","useState","userInput","setUserInput","movies","setMovies","totalResult","setTotalResult","query","get","useEffect","fetchSearchMovies","then","results","total_results","reset","onSubmit","e","preventDefault","onChange","currentTarget","value","type","autoComplete","placeholder","autoFocus","map","Film","Link","Movie","Item","MovieTitle"],"sourceRoot":""}