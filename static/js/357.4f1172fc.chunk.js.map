{"version":3,"file":"static/js/357.4f1172fc.chunk.js","mappings":"oOAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAWI,QAC3D,CAACR,KAGF,8BACGG,GAAWA,EAAQM,OAAS,GAC3B,wBACGN,EAAQO,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACpB,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,SAQf","sources":["components/Reviews.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(({ results }) => setReviews(results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => {\n            const { id, author, content } = review;\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","results","length","map","review","id","author","content"],"sourceRoot":""}